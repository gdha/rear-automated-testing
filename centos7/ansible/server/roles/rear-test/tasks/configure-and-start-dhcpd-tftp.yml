---
# File: ansible/server/roles/rear-test/tasks/configure-and-start-dhcpd-tftp.yml for Redhat/CentOS
#

- name: Install packages we need for dhcp and tftpboot
  package: name={{ item }} state=present
  with_items:
    - dhcp
    - syslinux-tftpboot
    - tftp
    - tftp-server
    - xinetd
  when: ansible_os_family == "RedHat"

- name: Install packages we need for dhcp and tftpboot (ubuntu>15)
  package: name={{ item }} state=present
  with_items:
    - isc-dhcp-server
    - syslinux
    - syslinux-common
    - syslinux-utils
    - isolinux
    - pxelinux
    - tftp
    - tftpd
    - xinetd
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_major_version > '15'

- name: Install packages we need for dhcp and tftpboot (ubuntu14)
  package: name={{ item }} state=present
  with_items:
    - isc-dhcp-server
    - tftp
    - tftpd
    - xinetd
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '14'

- name: Install packages we need for dhcp and tftpboot (SLES)
  package: name={{ item }} state=present
  with_items:
    - dhcp-server
    - xinetd
    - tftp
    - gfxboot
  when: ansible_os_family == "Suse"

# The 2 lines are always appended instead of replaced.
#- name: Modify /etc/xinetd.d/tftp server_args and enable tftp service
#  lineinfile:
#     dest=/etc/xinetd.d/tftp
#     regexp="{{ item.regexp }}"
#     line="{{ item.line }}"
#     state=present
#  notify: restart xinitd
#  with_items:
#     - regexp: "^[*]server_args[*]"
#       backrefs: true
#       line: "\tserver_args\t\t= -s /export/nfs/tftpboot"
#     - regexp: "^[*]disable[*]"
#       backrefs: yes
#       line: "\tdisable\t\t\t= no"

- name: Copy tftp file to /etc/xinetd.d/tftp
  copy: src=tftp dest=/etc/xinetd.d/tftp mode=0644

- name: create /run/dhcp-server directory
  file:
    path: /run/dhcp-server
    state: directory
    mode: 0755
  when: ansible_os_family == "Debian"

- name: Create the pxelinux.cfg directory
  file:
    path: /export/nfs/tftpboot/pxelinux.cfg
    state: directory
    mode: 0755

- name: Copy pxelinux.0 to /export/nfs/tftpboot directory (rh arch)
  copy: src=/usr/share/syslinux/pxelinux.0 dest=/export/nfs/tftpboot/pxelinux.0 mode=0644
  when: ansible_os_family == "RedHat"

- name: Copy pxelinux.0 to /export/nfs/tftpboot directory (ubuntu >15)
  copy: src=/usr/lib/PXELINUX/pxelinux.0 dest=/export/nfs/tftpboot/pxelinux.0 mode=0644
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_major_version > '15'

- name: Copy pxelinux.0 to /export/nfs/tftpboot directory (ubuntu14)
  copy: src=/usr/lib/syslinux/pxelinux.0 dest=/export/nfs/tftpboot/pxelinux.0 mode=0644
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '14'

- name: Copy pxelinux.0 to /export/nfs/tftpboot directory (SLES)
  copy: src=/usr/share/syslinux/pxelinux.0 dest=/export/nfs/tftpboot/pxelinux.0 mode=0644
  when: ansible_os_family == "Suse"

- name: Copy menu.c32 to /export/nfs/tftpboot directory (rh arch)
  copy: src=/usr/share/syslinux/menu.c32 dest=/export/nfs/tftpboot/menu.c32 mode=0644
  when: ansible_os_family == "RedHat"

- name: Copy menu.c32 to /export/nfs/tftpboot directory (ubuntu >15)
  copy: src=/usr/lib/syslinux/modules/bios/menu.c32 dest=/export/nfs/tftpboot/menu.c32 mode=0644
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_major_version > '15'

- name: Copy menu.c32 to /export/nfs/tftpboot directory (ubuntu14)
  copy: src=/usr/lib/syslinux/menu.c32 dest=/export/nfs/tftpboot/menu.c32 mode=0644
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '14'

- name: Copy menu.c32 to /export/nfs/tftpboot directory (sles arch)
  copy: src=/usr/share/syslinux/menu.c32 dest=/export/nfs/tftpboot/menu.c32 mode=0644
  when: ansible_os_family == "Suse"

- name: Copy dhcpd.conf file to /etc/dhcp/dhcpd.conf (rhel and debian)
  copy: src=dhcpd.conf dest=/etc/dhcp/dhcpd.conf mode=0644
  when: ansible_os_family == "RedHat" or ansible_os_family == "Debian"

- name: Copy dhcpd.conf file to /etc/dhcpd.conf (sles)
  copy: src=dhcpd.conf dest=/etc/dhcpd.conf mode=0644
  when: ansible_os_family == "Suse"

- name: Define interface to listen to for SLES for dhcpd
  lineinfile:
    dest=/etc/sysconfig/dhcpd
    regexp="{{ item.regexp }}"
    line="{{ item.line }}"
  with_items:
    - regexp: "^DHCPD_INTERFACE=.*"
      line: "DHCPD_INTERFACE=eth1"
  when: ansible_os_family == "Suse"

- name: Make sure dhcpd daemon is up and running
  service: name=dhcpd state=started enabled=yes
  when: ansible_os_family == "RedHat" or ansible_os_family == "Suse"

- name: Make sure isc-dhcp-server is up and running (debian)
  service: name=isc-dhcp-server state=started enabled=yes
  when: ansible_os_family == "Debian"
