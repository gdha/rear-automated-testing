# -*- mode: ruby -*-
# vi: set ft=ruby :

nodes = [
   { :hostname => 'client', :ip => '192.168.33.10', :box => 'centos/7', :ram => 1024, :gport => '5991' },
   { :hostname => 'server', :ip => '192.168.33.15', :box => 'centos/7', :ram => 1024, :gport => '5992' }
]

ENV['VAGRANT_DEFAULT_PROVIDER'] = 'libvirt'

Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  nodes.each do |node|
    config.vm.define node[:hostname] do |nodeconfig|
      nodeconfig.vm.box = node[:box]
      nodeconfig.vm.hostname = node[:hostname] + ".box"
      nodeconfig.vm.network :private_network, ip: node[:ip]

      memory = node[:ram] ? node[:ram] : 256;
      host = node[:hostname]

      nodeconfig.vm.provider :libvirt do |libvirt|
        # with vncviewer we can connect to client, server via their specific port definition
        # we can also use vagrant ssh [client|server] of course
        libvirt.graphics_port = node[:gport]
      end
     
      nodeconfig.vm.synced_folder ".", "/home/vagrant/sync", disabled: true

      nodeconfig.vm.provision "ansible_local" do |ansible|
         # first run the common ansible playbook
         ansible.playbook = "ansible/common/vagrant-playbook.yml"
         ansible.sudo = true
      end
      nodeconfig.ssh.forward_agent    = true
      nodeconfig.ssh.insert_key       = false
      nodeconfig.ssh.private_key_path =  ["~/.vagrant.d/insecure_private_key","~/.ssh/id_rsa"]
      nodeconfig.vm.provision :shell, privileged: false do |s|
        ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
        s.inline = <<-SHELL
		mkdir -p -m 700 /home/$USER/.ssh
		echo #{ssh_pub_key} >> /home/$USER/.ssh/authorized_keys
		sudo bash -c "mkdir -p -m 700 /root/.ssh"
		sudo bash -c "echo #{ssh_pub_key} >> /root/.ssh/authorized_keys"
	SHELL
      end
      # Now we will run the client or server ansible playbook depending on the hostname
      if host =~ /server/
         nodeconfig.vm.provision "ansible_local" do |ansible|
           ansible.playbook = "ansible/server/vagrant-playbook.yml"
           ansible.sudo = true
           # ansible.verbose = 'vvvv'
         end
      elsif host =~ /client/
         nodeconfig.vm.provision "ansible_local" do |ansible|
         ansible.playbook = "ansible/client/vagrant-playbook.yml"
         ansible.sudo = true
         # ansible.verbose = 'vvvv'
         end
      end

      
    # end of config.vm.define node
    end

  

  # end of nodes.each do |node|
  end

  config.vm.define "recover", autostart: false do |recover|
    recover.vm.network :private_network, ip: "192.168.33.5"
    # recover.ssh.username = "root"
    recover.ssh.insert_key = false
    recover.ssh.private_key_path = "../insecure_keys/vagrant.private"

    recover.vm.provider :libvirt do |recover_prov|
      recover_prov.graphics_port = 5993
      recover_prov.graphics_ip = '127.0.0.1'
      recover_prov.video_type = 'qxl'
      recover_prov.storage :file, :size => '40G', :type => 'raw'
      # make sure file "/export/isos/client/rear-client.iso" is readable by others
      recover_prov.storage :file, :device => :cdrom, :path => '/export/isos/client/rear-client.iso'
      recover_prov.boot 'network'
      recover_prov.boot 'cdrom'
      recover_prov.boot 'hd'
      # end of |recover_prov|
    end
      
    # end of |recover| 
    end
  
# end of Vagrant.configure
end
